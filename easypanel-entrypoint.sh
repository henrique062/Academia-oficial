#!/bin/sh
set -e

# Exibir informa√ß√µes do ambiente
echo "====================================================="
echo "üöÄ INICIANDO TRIPULANTE DASHBOARD - MODO PRODU√á√ÉO"
echo "====================================================="

# Verificar diret√≥rios e arquivos importantes
echo "Verificando arquivos cr√≠ticos..."
ls -la /app

if [ ! -d "/app/dist" ]; then
  echo "‚ùå ERRO CR√çTICO: Diret√≥rio /app/dist n√£o encontrado!"
  echo "O build da aplica√ß√£o falhou ou n√£o foi copiado corretamente."
  exit 1
fi

if [ ! -d "/app/dist/server" ]; then
  echo "‚ùå ERRO CR√çTICO: Diret√≥rio /app/dist/server n√£o encontrado!"
  echo "O build do servidor falhou ou n√£o foi copiado corretamente."
  exit 1
fi

if [ ! -f "/app/dist/server/index.js" ]; then
  echo "‚ùå ERRO CR√çTICO: Arquivo /app/dist/server/index.js n√£o encontrado!"
  echo "O build do servidor est√° incompleto."
  exit 1
fi

# Verificar se o pacote @vitejs/plugin-react est√° na pasta node_modules
echo "Verificando depend√™ncias cr√≠ticas..."
if [ ! -d "/app/node_modules/@vitejs" ] || [ ! -d "/app/node_modules/@vitejs/plugin-react" ]; then
  echo "‚ö†Ô∏è Aviso: Pacote @vitejs/plugin-react n√£o encontrado em node_modules."
  
  # Verificar se temos permiss√£o para instalar (apenas se n√£o estiver rodando como usu√°rio n√£o-root)
  if [ "$(id -u)" = "0" ]; then
    echo "üîß Tentando instalar @vitejs/plugin-react..."
    npm install @vitejs/plugin-react --no-save || echo "‚ùå Falha ao instalar o pacote."
  else
    echo "‚ÑπÔ∏è Executando como usu√°rio n√£o-root, n√£o √© poss√≠vel instalar pacotes."
  fi
fi

# Verificar se as pastas public e assets existem
if [ ! -d "/app/dist/public" ]; then
  echo "‚ö†Ô∏è Aviso: Diret√≥rio /app/dist/public n√£o encontrado!"
  echo "Criando diret√≥rio para assets est√°ticos..."
  mkdir -p /app/dist/public
else
  echo "‚úÖ Diret√≥rio de assets p√∫blicos encontrado."
  if [ -d "/app/dist/public/assets" ]; then
    echo "‚úÖ Assets da aplica√ß√£o encontrados."
  else
    echo "‚ö†Ô∏è Aviso: Pasta assets n√£o encontrada em dist/public."
  fi
fi

# Verificar se temos arquivos est√°ticos em /app/dist/server/public
if [ -d "/app/dist/server/public" ] && [ "$(ls -A /app/dist/server/public 2>/dev/null)" ]; then
  echo "‚ö†Ô∏è Detectados arquivos est√°ticos em /app/dist/server/public, copiando para /app/dist/public..."
  cp -r /app/dist/server/public/* /app/dist/public/ 2>/dev/null || echo "‚ùå Falha ao copiar arquivos est√°ticos"
fi

# Verificar que temos arquivos est√°ticos em /app/dist/public
if [ ! "$(ls -A /app/dist/public 2>/dev/null)" ]; then
  echo "‚ö†Ô∏è Diret√≥rio /app/dist/public est√° vazio! Isso pode causar problemas de renderiza√ß√£o."
  # Tentar criar um index.html m√≠nimo para evitar erros cr√≠ticos
  echo "<html><body><h1>Placeholder Page</h1><p>Este √© um arquivo tempor√°rio. Os arquivos est√°ticos n√£o foram encontrados.</p></body></html>" > /app/dist/public/index.html
fi

# Executar script de corre√ß√£o para o EasyPanel, se existir
if [ -f "/app/scripts/easypanel-fix.sh" ]; then
  echo "üîß Executando script de corre√ß√£o para o EasyPanel..."
  sh /app/scripts/easypanel-fix.sh
else
  echo "‚ÑπÔ∏è Script de corre√ß√£o para o EasyPanel n√£o encontrado (opcional)."
  
  # Criar script fix-easypanel.sh se n√£o existir
  mkdir -p /app/scripts
  cat > /app/scripts/easypanel-fix.sh << 'EOF'
#!/bin/sh
# Script de corre√ß√£o para EasyPanel
echo "Verificando poss√≠veis problemas conhecidos..."

# Verificar imports no arquivo server/index.js
if grep -q "@vitejs/plugin-react" /app/dist/server/index.js; then
  echo "‚ö†Ô∏è Detectada refer√™ncia a @vitejs/plugin-react no c√≥digo compilado!"
  echo "üîß Removendo refer√™ncias a @vitejs/plugin-react do servidor..."
  sed -i 's/.*@vitejs\/plugin-react.*//g' /app/dist/server/index.js
  echo "‚úÖ Corre√ß√£o aplicada ao servidor."
fi

# Outros problemas conhecidos podem ser corrigidos aqui
echo "‚úÖ Verifica√ß√£o completa."
EOF
  chmod +x /app/scripts/easypanel-fix.sh
  echo "üîß Script de corre√ß√£o criado. Executando..."
  sh /app/scripts/easypanel-fix.sh
fi

# Verificar se as vari√°veis do Supabase est√£o definidas
echo "Verificando configura√ß√£o do Supabase..."

# Tentar carregar vari√°veis de ambiente de um arquivo .env se existir
if [ -f ".env" ]; then
  echo "üîç Arquivo .env encontrado, carregando vari√°veis..."
  # Extrair vari√°veis do Supabase do arquivo .env (somente se n√£o estiverem definidas)
  if [ -z "$SUPABASE_URL" ] && grep -q "SUPABASE_URL" .env; then
    export SUPABASE_URL=$(grep "SUPABASE_URL" .env | cut -d '=' -f2)
    echo "‚úÖ SUPABASE_URL carregada do arquivo .env"
  fi
  if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ] && grep -q "SUPABASE_SERVICE_ROLE_KEY" .env; then
    export SUPABASE_SERVICE_ROLE_KEY=$(grep "SUPABASE_SERVICE_ROLE_KEY" .env | cut -d '=' -f2)
    echo "‚úÖ SUPABASE_SERVICE_ROLE_KEY carregada do arquivo .env"
  fi
fi

# Verificar se as vari√°veis est√£o definidas agora
if [ -n "$SUPABASE_URL" ] && [ -n "$SUPABASE_SERVICE_ROLE_KEY" ]; then
  echo "‚úÖ Credenciais do Supabase configuradas atrav√©s das vari√°veis de ambiente"
  # Mostrar vers√£o truncada das credenciais por seguran√ßa
  SUPABASE_URL_PREFIX=$(echo "$SUPABASE_URL" | cut -c1-20)
  SUPABASE_KEY_PREFIX=$(echo "$SUPABASE_SERVICE_ROLE_KEY" | cut -c1-10)
  echo "üîå Conectando ao Supabase URL: ${SUPABASE_URL_PREFIX}... (chave: ${SUPABASE_KEY_PREFIX}...)"
else
  echo "‚ö†Ô∏è Credenciais do Supabase incompletas!"
  echo "  SUPABASE_URL: ${SUPABASE_URL:-(n√£o definida)}"
  echo "  SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:+configurada}${SUPABASE_SERVICE_ROLE_KEY:-(n√£o definida)}"
  
  # Criar arquivo .env tempor√°rio com vari√°veis vazias para n√£o falhar completamente
  echo "üîß Criando arquivo .env tempor√°rio com vari√°veis vazias para debug..."
  cat > .env << EOF
# Arquivo .env tempor√°rio criado pelo script de inicializa√ß√£o
# Substitua estes valores pelas suas credenciais reais do Supabase
SUPABASE_URL=https://seu-projeto.supabase.co
SUPABASE_SERVICE_ROLE_KEY=sua-chave-service-role
NODE_ENV=production
PORT=3000
EOF
  echo "‚ö†Ô∏è A aplica√ß√£o pode n√£o funcionar corretamente sem estas credenciais."
  echo "‚ö†Ô∏è Edite o arquivo .env no container ou configure as vari√°veis no EasyPanel."
fi

# Exibir informa√ß√µes importantes
echo "====================================================="
echo "Ambiente: ${NODE_ENV:-production}"
echo "Porta: ${PORT:-3000}"
echo "Diret√≥rio atual: $(pwd)"
echo "Comando a ser executado: $@"
echo "====================================================="

# Iniciar a aplica√ß√£o
echo "üü¢ Iniciando aplica√ß√£o..."
exec "$@"