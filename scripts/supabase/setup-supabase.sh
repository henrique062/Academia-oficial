#!/bin/bash
# Script para configurar fun√ß√µes SQL no Supabase

if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
  echo "‚ùå Erro: Vari√°veis de ambiente SUPABASE_URL e SUPABASE_SERVICE_ROLE_KEY devem estar definidas"
  exit 1
fi

SCRIPT_DIR="$(dirname "$0")"
SQL_FILE="${SCRIPT_DIR}/setup-functions.sql"

if [ ! -f "$SQL_FILE" ]; then
  echo "‚ùå Erro: Arquivo SQL n√£o encontrado em: $SQL_FILE"
  exit 1
fi

echo "üöÄ Iniciando configura√ß√£o do Supabase..."
echo "üìã URL: ${SUPABASE_URL}"

# Ler o conte√∫do do arquivo SQL
SQL_CONTENT=$(cat "$SQL_FILE")

# Enviar requisi√ß√£o para o endpoint REST para executar as fun√ß√µes SQL
echo "üì° Enviando fun√ß√µes SQL para o Supabase..."
curl -s -X POST "${SUPABASE_URL}/rest/v1/rpc/execute_sql" \
  -H "apikey: ${SUPABASE_SERVICE_ROLE_KEY}" \
  -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE_KEY}" \
  -H "Content-Type: application/json" \
  -d "{\"sql_query\": $(echo "$SQL_CONTENT" | jq -Rs .)}" | jq .

echo ""
echo "‚úÖ Configura√ß√£o das fun√ß√µes SQL conclu√≠da!"

# Testar se a fun√ß√£o get_tables est√° funcionando
echo "üîç Testando a fun√ß√£o get_tables..."
curl -s -X POST "${SUPABASE_URL}/rest/v1/rpc/get_tables" \
  -H "apikey: ${SUPABASE_SERVICE_ROLE_KEY}" \
  -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE_KEY}" \
  -H "Content-Type: application/json" \
  -d "{}" | jq .

echo ""
echo "‚úÖ Setup do Supabase conclu√≠do com sucesso!" 