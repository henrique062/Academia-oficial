name: tripulante-dashboard
description: Dashboard para gerenciamento de alunos do curso Tripulante

# Porta em que a aplicação vai rodar
port: 3000
expose:
  - port: 3000
    type: http
    secure: true
    metrics: true   # Habilita métricas Prometheus se disponível no EasyPanel

# Definição dos serviços
services:
  # Aplicação principal
  app:
    image: ${REGISTRY_HOST}/${REGISTRY_NAMESPACE}/tripulante-dashboard:latest
    build:
      context: .
      dockerfile: Dockerfile.easypanel
    environment:
      - NODE_ENV=production
      - PORT=3000
      # As variáveis abaixo serão substituídas apenas se estiverem definidas no EasyPanel,
      # caso contrário, serão usados os valores padrão do Dockerfile
      - SUPABASE_URL=${SUPABASE_URL:-}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:-}
      # Configurações adicionais
      - SESSION_SECRET=${SESSION_SECRET:-change-me-in-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEBUG=1
    # Verificação de saúde
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Configurações de recursos
    resources:
      cpu: 0.5     # Limite de CPU (cores)
      memory: 1Gi  # Limite de memória
    # Política de reinicialização
    restart: always
    volumes:
      # Volume para logs
      - name: logs
        path: /app/logs

# Volumes persistentes
volumes:
  logs:
    size: 500Mi

# Cronjobs para manutenção
cronjobs:
  # Backup diário do banco de dados (às 03:00 AM)
  backup:
    schedule: "0 3 * * *"
    command: |
      bash /app/scripts/backup-db.sh tripulante-db
    image: ${REGISTRY_HOST}/${REGISTRY_NAMESPACE}/tripulante-dashboard:latest
    volumes:
      - name: backups
        path: /app/backups